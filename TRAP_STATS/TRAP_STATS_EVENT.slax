/*
$Id$
*/

version 1.0;
ns junos = "http://xml.juniper.net/junos/*/junos";
ns xnm = "http://xml.juniper.net/xnm/1.1/xnm";
ns jcs = "http://xml.juniper.net/junos/commit-scripts/1.0";
import "../import/junos.xsl";

/*
 * Author        : Nadeem Mohammad
 * Version       : 1.0
 * Last Modified : Aug 4th, 2014
 * Platform      : MX
 * Release       : 12.1 and above
 *
 * Description   : This event script runs periodically and checks for pfe error
		   on each pfe in the system by excuting following command
		   "show tlchip 1 trapstats verbose" looks for SLU.HW errors.
		   If error is found it reports it to the system log message file.
                   This syslog includes the values of counter and rate.
		   Note: presence of SLU.HW with a non zero counter indicates error.
 *
 * =============================================================================
 * Revision History
 * -----------------------------------------------------------------------------
 * 1.0: August 4th, 2014
 *      - Initial Release
 * 
 *
 * =============================================================================
 *
 * To set this up on your JUNOS device copy this script to the following folder:
 * /var/db/scripts/event
 *
 * Then configure JUNOS with the following:
 * 'set event-options event-script file TRAP_STATS_EVENT.slax'
 *
 * Make sure you name the script 'TRAP_STATS_EVENT' or change references in
 * the script and JUNOS config to be whatever you named it.
 *
 */


var $event-definition = {
    <event-options> {
        <generate-event> {
        <name> "every-five-minutes";
        <time-interval> "300";
        }
        <policy> {
            <name> "check-pfe-register";
            <events> "every-five-minutes";
            <then> {
                <event-script> {
                <name> "TRAP_STATS_EVENT.slax";
                }
            }
        }
    }
}


match / {

  <event-script-results> {

    var $chassis = jcs:invoke('get-chassis-inventory');

      for-each ($chassis//chassis-module[starts-with(name, "FPC ")]) {  
        var $reg1 = jcs:regex("(FPC) +([0-9]+)", ./name);
	var $fpc = "fpc" _ $reg1[3];
        call find_pfe_hardware_error( $fpc );
     }
  }
}

/*
* Given a FPC:
* excute "show tlchip 1 trapstats verbose" and look for
* SLU.HW counter value > 0
*/
template find_pfe_hardware_error( $fpc ) {

    /* Build RPC and invoke it */
    var $rpc = <request-pfe-execute> {
      <target> $fpc;
      <command> "show tlchip 1 trapstats verbose";
    }

    var $string = jcs:invoke($rpc);

    var $lines = jcs:break_lines($string);

    for-each ($lines) {
        if (contains(., "slu.hw")) {
            var $v1 = jcs:split("[[:blank:]]", .);
	    var $syslog_message = "HARDWARE ERROR FOUND on " _ $fpc _ " count = " _ $v1[3] _ " rate = " _ $v1[4];
            expr jcs:syslog("pfe.error", $syslog_message);
        }
    }
}
